<?php 
/*
    ১. স্ট্যাটিক প্রপার্টি (Static Property): 

        - স্ট্যাটিক প্রপার্টি হলো একটি ক্লাসের প্রপার্টি যা ক্লাসের ইনস্ট্যান্স (অবজেক্ট) তৈরি না করেই অ্যাক্সেস করা যায়। 

        - এটি ক্লাস লেভেলে সংরক্ষিত হয় এবং সব অবজেক্টের জন্য শেয়ার্ড থাকে। অর্থাৎ, স্ট্যাটিক প্রপার্টির মান সব অবজেক্টের জন্য একই থাকে।

    সিনট্যাক্স:

        class ClassName {
            public static $propertyName;
        }


    ২. স্ট্যাটিক মেথড (Static Method):

       - স্ট্যাটিক মেথড হলো একটি ক্লাসের মেথড যা অবজেক্ট তৈরি না করেই কল করা যায়। 

       - এটি ক্লাস লেভেলে কাজ করে এবং সাধারণত এমন ফাংশনালিটি প্রদান করে যা অবজেক্টের স্টেট (state) এর উপর নির্ভর করে না।

       সিনট্যাক্স:

       class ClassName {
            public static function methodName() {
                মেথডের কোড
            }
        }

    ৩. স্ট্যাটিক প্রপার্টি এবং মেথডের ব্যবহার:

        - স্ট্যাটিক প্রপার্টি এবং মেথড সাধারণত এমন ডেটা বা ফাংশনালিটির জন্য ব্যবহার করা হয় যা ক্লাসের সব অবজেক্টের জন্য     শেয়ার্ড থাকে। যেমন:

        - কাউন্টার ম্যানেজমেন্ট (যেমন: কতগুলো অবজেক্ট তৈরি হয়েছে)।

        - ইউটিলিটি ফাংশন (যেমন: ম্যাথ অপারেশন, ফরম্যাটিং)।


    ৪. স্ট্যাটিক প্রপার্টি এবং মেথডের সুবিধা: 

        - মেমরি এফিশিয়েন্সি: স্ট্যাটিক প্রপার্টি এবং মেথড শুধুমাত্র একবার মেমরিতে লোড হয়, তাই এটি মেমরি সেভ করে।

        - সরাসরি অ্যাক্সেস: অবজেক্ট তৈরি না করেই সরাসরি ক্লাস থেকে অ্যাক্সেস করা যায়।

        - শেয়ার্ড ডেটা: স্ট্যাটিক প্রপার্টি সব অবজেক্টের জন্য শেয়ার্ড থাকে, যা গ্লোবাল ডেটা ম্যানেজমেন্টে সাহায্য করে।

    
    ৫. স্ট্যাটিক প্রপার্টি এবং মেথডের সীমাবদ্ধতা:

        - স্টেট ম্যানেজমেন্ট: স্ট্যাটিক প্রপার্টি অবজেক্টের স্টেট ধরে রাখে না, তাই এটি সব অবজেক্টের জন্য একই থাকে।

        - টেস্টিং: স্ট্যাটিক মেথড ইউনিট টেস্টিং এর সময় মক (mock) করা কঠিন।
*/

class User {
    public static $userCount = 0;

    public function __construct() {
        self::$userCount++;
    }

    public static function getUserCount() {
        return self::$userCount;
    }
}

// অবজেক্ট তৈরি
$user1 = new User();
$user2 = new User();
$user3 = new User();

echo "Total Users: " . User::getUserCount(); // আউটপুট: Total Users: 3

//Example-2:

/*
    class Math {
        public static function multiply($a, $b) {
            return $a * $b;
        }
    }

    echo "Multiplication: " . Math::multiply(5, 4);
*/